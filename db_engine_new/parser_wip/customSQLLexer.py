# Generated from .\customSQL\customSQL.g4 by ANTLR 4.11.1
from antlr4 import *
from io import StringIO
import sys

if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4, 0, 13, 74, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2, 4, 7, 4, 2, 5, 7, 5, 2,
        6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2, 10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 1, 0,
        1, 0, 1, 1, 1, 1, 1, 2, 1, 2, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6,
        1, 7, 1, 7, 1, 8, 1, 8, 1, 9, 4, 9, 50, 8, 9, 11, 9, 12, 9, 51, 1, 10, 4, 10, 55, 8, 10, 11,
        10, 12, 10, 56, 1, 11, 1, 11, 5, 11, 61, 8, 11, 10, 11, 12, 11, 64, 9, 11, 1, 11, 1, 11,
        1, 12, 4, 12, 69, 8, 12, 11, 12, 12, 12, 70, 1, 12, 1, 12, 1, 62, 0, 13, 1, 1, 3, 2, 5, 3,
        7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 1, 0, 3, 2, 0, 65,
        90, 97, 122, 1, 0, 48, 57, 3, 0, 9, 10, 13, 13, 32, 32, 77, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0,
        0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0,
        0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0,
        0, 0, 25, 1, 0, 0, 0, 1, 27, 1, 0, 0, 0, 3, 29, 1, 0, 0, 0, 5, 31, 1, 0, 0, 0, 7, 33, 1, 0, 0,
        0, 9, 35, 1, 0, 0, 0, 11, 38, 1, 0, 0, 0, 13, 41, 1, 0, 0, 0, 15, 44, 1, 0, 0, 0, 17, 46, 1,
        0, 0, 0, 19, 49, 1, 0, 0, 0, 21, 54, 1, 0, 0, 0, 23, 58, 1, 0, 0, 0, 25, 68, 1, 0, 0, 0, 27,
        28, 5, 44, 0, 0, 28, 2, 1, 0, 0, 0, 29, 30, 5, 61, 0, 0, 30, 4, 1, 0, 0, 0, 31, 32, 5, 62,
        0, 0, 32, 6, 1, 0, 0, 0, 33, 34, 5, 60, 0, 0, 34, 8, 1, 0, 0, 0, 35, 36, 5, 62, 0, 0, 36, 37,
        5, 61, 0, 0, 37, 10, 1, 0, 0, 0, 38, 39, 5, 60, 0, 0, 39, 40, 5, 61, 0, 0, 40, 12, 1, 0, 0,
        0, 41, 42, 5, 60, 0, 0, 42, 43, 5, 62, 0, 0, 43, 14, 1, 0, 0, 0, 44, 45, 5, 40, 0, 0, 45,
        16, 1, 0, 0, 0, 46, 47, 5, 41, 0, 0, 47, 18, 1, 0, 0, 0, 48, 50, 7, 0, 0, 0, 49, 48, 1, 0,
        0, 0, 50, 51, 1, 0, 0, 0, 51, 49, 1, 0, 0, 0, 51, 52, 1, 0, 0, 0, 52, 20, 1, 0, 0, 0, 53, 55,
        7, 1, 0, 0, 54, 53, 1, 0, 0, 0, 55, 56, 1, 0, 0, 0, 56, 54, 1, 0, 0, 0, 56, 57, 1, 0, 0, 0,
        57, 22, 1, 0, 0, 0, 58, 62, 5, 34, 0, 0, 59, 61, 9, 0, 0, 0, 60, 59, 1, 0, 0, 0, 61, 64, 1,
        0, 0, 0, 62, 63, 1, 0, 0, 0, 62, 60, 1, 0, 0, 0, 63, 65, 1, 0, 0, 0, 64, 62, 1, 0, 0, 0, 65,
        66, 5, 34, 0, 0, 66, 24, 1, 0, 0, 0, 67, 69, 7, 2, 0, 0, 68, 67, 1, 0, 0, 0, 69, 70, 1, 0,
        0, 0, 70, 68, 1, 0, 0, 0, 70, 71, 1, 0, 0, 0, 71, 72, 1, 0, 0, 0, 72, 73, 6, 12, 0, 0, 73,
        26, 1, 0, 0, 0, 5, 0, 51, 56, 62, 70, 1, 6, 0, 0
    ]


class customSQLLexer(Lexer):
    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [DFA(ds, i) for i, ds in enumerate(atn.decisionToState)]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    ID = 10
    INT = 11
    STRING = 12
    WS = 13

    channelNames = [u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN"]

    modeNames = ["DEFAULT_MODE"]

    literalNames = ["<INVALID>",
                    "','", "'='", "'>'", "'<'", "'>='", "'<='", "'<>'", "'('", "')'"]

    symbolicNames = ["<INVALID>",
                     "ID", "INT", "STRING", "WS"]

    ruleNames = ["T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6",
                 "T__7", "T__8", "ID", "INT", "STRING", "WS"]

    grammarFileName = "customSQL.g4"

    def __init__(self, input=None, output: TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.11.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None
